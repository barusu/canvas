{"version":3,"sources":["2018-06-25/script/canvas.js"],"names":["scope","RAF","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","ratio","Trail","option","points","this","shadowColor","shadowBlur","path","radius","start","end","distance","vx","vy","progress","i","p1","p2","length","Math","floor","sqrt","step","prototype","plength","brush","paint","speed","preservation","ctx","draw","old","x","save","beginPath","arc","y","fill","closePath","restore","fillStyle","PI","Circle","strokeStyle","lineWidth","c","width","Path","lineJoin","moveTo","poi","stroke","lineTo","initCanvas","normal","trails","ctxs","globalCompositeOperation","canvas","tctx","trailCanvas","get2DContext","createElement","document","getElementById","nodeType","nodeName","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","backingStorePixelRatio","console","scale","clientWidth","height","clientHeight","getContext","error","el","prev","clearRect","fillRect","forEach","loop","drawImage","drawTrail","drawHexagon","getHexagon","direction","arguments","undefined","t","push","drawCircle","reverse","min","sin","cos","circleToPoints"],"mappings":"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","file":"canvas.js","sourcesContent":["/**\n * Canvas\n * @author shiro https://github.com/barusu\n */\n\n(function(scope) {\n  /**\n   * Base\n   */\n  var RAF = (function() {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {\n      window.setTimeout(callback, 1000 / 60);\n    };\n  })();\n\n  var ratio = 1;\n\n  // 获取 Canvas 2D 上下文\n  function get2DContext(canvas) {\n    var ctx, tctx;\n    var trailCanvas = document.createElement(\"canvas\");\n\n    if(typeof(canvas) === 'string') canvas = document.getElementById(canvas);\n    if(canvas && canvas.nodeType === 1 && canvas.nodeName === 'CANVAS') {\n      ctx = canvas.getContext('2d');\n\n      // 获取设备分辨率信息\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      const backingStoreRatio = ctx.webkitBackingStorePixelRatio ||\n                                ctx.mozBackingStorePixelRatio ||\n                                ctx.msBackingStorePixelRatio ||\n                                ctx.oBackingStorePixelRatio ||\n                                ctx.backingStorePixelRatio || 1;\n      ratio = devicePixelRatio / backingStoreRatio;\n\n      // 按比例缩放Canvas\n      canvas.width = canvas.clientWidth * ratio;\n      canvas.height = canvas.clientHeight * ratio;\n      ctx.scale(ratio, ratio);\n      // 轨迹层\n      trailCanvas.width = canvas.width;\n      trailCanvas.height = canvas.height;\n      tctx = trailCanvas.getContext('2d');\n      tctx.scale(ratio, ratio);\n\n      // test\n      // trailCanvas.className = 'canvas';\n      // document.body.append(trailCanvas);\n      return {ctx, tctx};\n    }else {\n      console.error('El is not a Canvas');\n      return false;\n    }\n  }\n\n  // 计算两点之间的直线距离\n  function getDistance(p1, p2) {\n    return Math.sqrt((p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]));\n  }\n\n  // 直线路径转点数组\n  function pathToPoints(path) {\n    var points = [], start, end, distance, vx, vy, progress, i;\n    for(i = 0; i < path.length - 1; i++) {\n      start = path[i];\n      end = path[i + 1];\n      distance = Math.floor(getDistance(start, end));\n      vx = (end[0] - start[0]) / distance;\n      vy = (end[1] - start[1]) / distance;\n      progress = 0;\n      while(progress < distance) {\n        progress++;\n        points.push([start[0] + vx * progress, start[1] + vy * progress]);\n      }\n    }\n    return points;\n  }\n\n  // 圆转点数组 (顺时针)\n  function circleToPoints(c, radius) {\n    var points = [], min = 1 / radius, progress = 0;\n    while(progress < Math.PI * 2) {\n      points.push([c[0] + (Math.sin(progress) * radius), c[1] - (radius * Math.cos(progress))]);\n      progress += min;\n    }\n    points.push([c[0], c[1] - radius]);\n    return points;\n  }\n\n\n  /**\n   * Tool\n   */\n  // 计算六边形的坐标 [竖: 逆时针, 顶部开始  横: 逆时针, 左边开始](vertical, transverse)\n  function getHexagon(c, radius, direction = 'vertical') {\n    if(c && radius && c.length === 2) {\n      var t = radius / 2 * Math.sqrt(3);\n      if(direction === 'vertical') {\n        return [\n          [c[0], c[1] - radius],\n          [c[0] - t, c[1] - (radius / 2)],\n          [c[0] - t, c[1] + (radius / 2)],\n          [c[0], c[1] + radius],\n          [c[0] + t, c[1] + (radius / 2)],\n          [c[0] + t, c[1] - (radius / 2)],\n          [c[0], c[1] - radius]\n        ];\n      }else {\n        return [\n          [c[0] -radius, c[1]],\n          [c[0] - (radius / 2), c[1] - t],\n          [c[0] + (radius / 2), c[1] - t],\n          [c[0] + radius, c[1]],\n          [c[0] + (radius / 2), c[1] + t],\n          [c[0] - (radius / 2), c[1] + t],\n          [c[0] - radius, c[1]]\n        ];\n      }\n    }else return [];\n  }\n\n  // 创建轨迹类\n  var Trail = function(option) {\n    if(option.points) {\n      this.points = option.points;\n    }else if(option.path) {\n      this.points = pathToPoints(option.path);\n    }\n    if(!this.points) this.points = [];\n    this.step = 0;\n    this.old = [];\n    this.brush = option.brush || '#fff';\n    this.shadowColor = option.shadowColor || '#fff';\n    this.shadowBlur = option.shadowBlur || 0;\n    this.radius = option.radius || 1;\n    this.speed = option.speed || 1;\n    this.progress = 0;\n  }\n  Trail.prototype = {\n    get plength() {\n      return this.points.length;\n    },\n    paint(ctx) {\n      var preservation = true;\n      this.progress += this.speed;\n      while(this.step < this.progress && this.step < this.plength) {\n        this.draw(ctx);\n        this.step++;\n        preservation = false;\n      }\n      if(preservation) this.draw(ctx);\n      if(this.step >= this.plength) {\n        this.step = 0;\n        this.progress -= this.plength;\n      }\n    },\n    draw(ctx) {\n      var x = this.points[this.step][0];\n      var y = this.points[this.step][1];\n      if(this.old[0] != x || this.old[1] != y) {\n        this.old = [x, y];\n        ctx.save();\n        ctx.fillStyle = this.brush;\n        ctx.shadowColor = this.shadowColor;\n        ctx.shadowBlur = this.shadowBlur;\n        ctx.beginPath();\n        ctx.arc(x, y, this.radius, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.closePath();\n        ctx.restore();\n      }\n    }\n  };\n\n  // 圈圈类\n  var Circle = function(option) {\n    this.radius = option.radius || 7;\n    this.c = option.c;\n    this.brush = option.brush || '#fff';\n    this.width = option.width || 1;\n  }\n  Circle.prototype = {\n    paint(ctx) {\n      ctx.save();\n      ctx.strokeStyle = this.brush;\n      ctx.lineWidth = this.width;\n      ctx.beginPath();\n      ctx.arc(this.c[0], this.c[1], this.radius, 0, Math.PI * 2);\n      ctx.stroke();\n      ctx.closePath();\n      ctx.restore();\n    }\n  };\n\n  // 路径类\n  var Path = function(option) {\n    this.path = option.path;\n    this.brush = option.brush || '#fff';\n    this.width = option.width || 1;\n  }\n  Path.prototype = {\n    paint(ctx) {\n      var poi = 0;\n      ctx.save();\n      ctx.strokeStyle = this.brush;\n      ctx.lineWidth = this.width;\n      ctx.lineJoin = \"round\";\n      ctx.lineCap = \"round\";\n      ctx.beginPath();\n      ctx.moveTo(this.path[poi][0], this.path[poi][1]);\n      poi++;\n      while(poi < this.path.length) {\n        ctx.lineTo(this.path[poi][0], this.path[poi][1]);\n        poi++;\n      }\n      ctx.stroke();\n      ctx.closePath();\n      ctx.restore();\n    }\n  };\n\n  scope.initCanvas = function(el) {\n    var ctxs = get2DContext(el);\n    var normal = [];\n    var trails = [];\n\n    function loop() {\n      ctxs.tctx.fillStyle = 'rgba(0,0,0,.95)';\n      var prev = ctxs.tctx.globalCompositeOperation;\n      ctxs.tctx.globalCompositeOperation = 'destination-in';\n      ctxs.tctx.fillRect(0, 0, ctxs.tctx.canvas.width / ratio, ctxs.tctx.canvas.height / ratio);\n      ctxs.tctx.globalCompositeOperation = prev;\n\n      trails.forEach(i => {\n        i.paint(ctxs.tctx);\n      });\n\n      ctxs.ctx.clearRect(0, 0, ctxs.ctx.canvas.width / ratio, ctxs.ctx.canvas.height / ratio);\n\n      normal.forEach(i => {\n        i.paint(ctxs.ctx);\n      });\n      ctxs.ctx.globalCompositeOperation = 'source-over';\n      ctxs.ctx.drawImage(ctxs.tctx.canvas, 0, 0, ctxs.tctx.canvas.width / ratio, ctxs.tctx.canvas.height / ratio);\n      RAF(() => {\n        loop();\n      });\n    }\n\n    loop();\n\n    return {\n      drawTrail(path) {\n        trails.push(new Trail({\n          path\n        }));\n      },\n      drawHexagon(c, radius, direction) {\n        // trails.push(new Trail({\n        //   path: getHexagon(c, radius, direction)\n        // }));\n        var path = getHexagon(c, radius, direction);\n        for(var i = 0; i < path.length - 1; i++) {\n          trails.push(new Trail({\n            path: [path[i], path[i + 1]],\n            speed: 1\n          }));\n        }\n        normal.push(new Path({\n          path,\n          brush: 'rgba(255,255,255,.4)'\n        }));\n        normal.push(new Path({\n          path: [path[0], path[2], path[5], path[3], path[1], path[4], path[6]],\n          brush: 'rgba(255,255,255,.5)'\n        }));\n        trails.push(new Trail({\n          path: [path[0], path[2], path[5], path[3], path[1], path[4], path[6]],\n          speed: 2\n        }));\n        trails.push(new Trail({\n          path: [path[3], path[5], path[2], path[6], path[4], path[1], path[3]],\n          speed: 3\n        }));\n      },\n      drawCircle(c, radius, reverse) {\n        var points = circleToPoints(c, radius);\n        if(reverse) points.reverse();\n        trails.push(new Trail({\n          points: points\n        }));\n        normal.push(new Circle({\n          c,\n          radius,\n          brush: 'rgba(255,255,255,.4)'\n        }));\n      }\n    };\n  };\n})(window);\n\n"]}