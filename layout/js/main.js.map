{"version":3,"sources":["layout/script/main.js"],"names":["scope","block","past","target","Xc","_sequence","sequence","x","this","matrix","arr","getPointInMatrix","w","h","y","t","_this","poi","some","n","i","outer","push","Array","fill","ox","oy","add","height","id","lines","length","insert","tem","width","victim","delete","_this2","resetBox","forEach","j","index","App","murderer","point","distance","direction","time","checkMatrix","list","x1","x2","y1","y2","_typeof","rs","deleteBlankLine","flag","mark","item","getItem","update","waitForDeathList","pop","Block","splice","minWidth","minHeight","ubw","ubh","background","style","left","event","top","window","e","clientX","clientY","Math","round","prototype","move","inspectVictim","victimFlag","setTimeout","dealVictim","murdererID","removeEventListener","over","methods","type","Vue","blocks","floor","_this3","$el","clientWidth","button","addEventListener","log","console"],"mappings":"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","file":"main.js","sourcesContent":["/**\n * Layout\n * 2018-10-15\n */\n(function(scope) {\n  var Xc = {\n    _sequence: 0,\n    set sequence(x) {\n      this._sequence = this._sequence < x ? x : this._sequence;\n    },\n    get sequence() {\n      return ++this._sequence;\n    }\n  };\n  // 矩阵\n  var matrix = {\n    arr: [],\n    getPointInMatrix(w, h, block) {\n      var poi = 0, x, y, t;\n      while(true) {\n        if(this.arr[poi]) {\n          x = 0;\n          if(this.arr[poi].some((n, i) => {\n            if(n === 0) x++;\n            else x = 0;\n            if(x >= w) {\n              y = 1;\n              outer:\n              while(true) {\n                if(y >= h) {\n                  x = ++i;\n                  return true;\n                }\n                if(this.arr[poi + y]) {\n                  for(t = 0; t < w; t++) {\n                    if(this.arr[poi + y][i - t] !== 0) break outer;\n                  }\n                  y++;\n                }else {\n                  this.arr.push(Array(12).fill(0));\n                  y++;\n                }\n              }\n            }\n            return false;\n          })) break;\n          poi++;\n        }else this.arr.push(Array(12).fill(0));\n      }\n      block.ox = block.x = x - w;\n      block.oy = block.y = poi;\n    },\n    add(block) {\n      var w, h;\n      for(w = 0; w < block.width; w++) {\n        for(h = 0; h < block.height; h++) {\n          this.arr[block.y + h][block.x + w] = block.id;\n        }\n      }\n      App.lines = this.arr.length;\n    },\n    insert(block) {\n      var tem, w, h, victim = [];\n      for(w = 0; w < block.width; w++) {\n        for(h = 0; h < block.height; h++) {\n          if(!this.arr[block.y + h]) this.arr[block.y + h] = Array(12).fill(0);\n          else {\n            if(this.arr[block.y + h][block.x + w] !== 0) {\n              tem = this.arr[block.y + h][block.x + w];\n              victim[tem] = victim[tem] || tem;\n              this.delete(tem);\n            }\n          }\n        }\n      }\n      this.add(block);\n      victim.forEach(i => {\n        this.resetBox(App.getItem(i), block);\n      });\n    },\n    delete(id) {\n      this.arr.forEach(i => {\n        i.forEach((j, index) => {\n          if(j === id) i[index] = 0;\n        });\n      });\n    },\n    update(block) {\n      this.delete(block.id);\n      this.insert(block);\n    },\n    resetBox(block, murderer) {\n      var list = [], time = 4, distance = 0, direction = [true, true, true, true, true], point;\n      victim[block.id] = block;\n      while(time) {\n        distance++;\n        if(direction[4]) {\n          point = this.checkMatrix(block.ox, block.ox + block.width, block.oy, block.oy + block.height, murderer.id);\n          if(point === false) {\n            direction[4] = false;\n          }\n          if(point) break;\n        }\n        if(direction[0]) {\n          point = this.checkMatrix(block.ox, block.ox + block.width, block.oy - distance, block.oy + block.height - distance, murderer.id);\n          if(point === false) {\n            direction[0] = false;\n            time--;\n          }\n          if(point) break;\n        }\n        if(direction[1]) {\n          point = this.checkMatrix(block.ox - distance, block.ox + block.width - distance, block.oy, block.oy + block.height, murderer.id);\n          if(point === false) {\n            direction[1] = false;\n            time--;\n          }\n          if(point) break;\n        }\n        if(direction[2]) {\n          point = this.checkMatrix(block.ox + distance, block.ox + block.width + distance, block.oy, block.oy + block.height, murderer.id);\n          if(point === false) {\n            direction[2] = false;\n            time--;\n          }\n          if(point) break;\n        }\n        if(direction[3]) {\n          point = this.checkMatrix(block.ox, block.ox + block.width, block.oy + distance, block.oy + block.height + distance, murderer.id);\n          if(point === false) {\n            direction[3] = false;\n            time--;\n          }\n          if(point) break;\n        }\n      }\n      if(point) {\n        block.x = point.x;\n        block.y = point.y;\n        this.add(block);\n        return true;\n      }else if(murderer) {\n        block.y = murderer.y + murderer.height;\n        this.insert(block);\n      }\n      return false;\n    },\n    checkMatrix(x1, x2, y1, y2, id) {\n      if(typeof x1 !== typeof 0 || typeof x2 !== typeof 0 || typeof y1 !== typeof 0 || typeof y2 !== typeof 0) return false;\n      var i;\n      id = id || 0;\n      if(x1 < 0 || x2 > 12 || y1 < 0) return false;\n      var rs = {x: x1, y: y1};\n      for(;y1 < y2; y1++) {\n        if(!this.arr[y1]) this.arr[y1] = Array(12).fill(0);\n        else {\n          for(i = x1; i < x2; i++) {\n            if(this.arr[y1][i]) {\n              rs = null;\n              if(this.arr[y1][i] !== id) return false;\n            }\n          }\n        }\n      }\n      return rs;\n    },\n    deleteBlankLine() {\n      var waitForDeathList = [], poi = 0, flag, mark = [], block;\n      this.arr.forEach((i, index) => {\n        flag = true;\n        i.forEach(item => {\n          if(item !== 0) {\n            flag = false;\n            if(!mark[item]) {\n              mark[item] = true;\n              if(poi) {\n                block = App.getItem(item);\n                block.oy = block.y = block.y - poi;\n                block.update();\n              }\n            }\n          }\n        });\n        if(flag) {\n          poi++;\n          waitForDeathList.push(index);\n        }\n      });\n      while(waitForDeathList.length) {\n        this.arr.splice(waitForDeathList.pop(), 1);\n      }\n  }\n  };\n  // 矩阵最小单位宽高\n  var ubw = 50, ubh = 10;\n  // Vue\n  var App;\n  // 鼠标按下时的坐标\n  var past;\n  // 当前被调整的Block对象\n  var target;\n  // 受影响的Block\n  var victim = [];\n\n  // 基本区块对象\n  function Block() {\n    this.id = Xc.sequence;\n    this.width = 4;\n    this.height = 3;\n    this.minWidth = 1;\n    this.minHeight = 1;\n    this.x = 0;\n    this.y = 0;\n    this.ox = 0;\n    this.oy = 0;\n    this.background = '#f6f';\n    matrix.getPointInMatrix(this.width, this.height, this);\n    matrix.add(this);\n    this.style = {\n      top: ubh * this.y + 'px',\n      left: ubw * this.x + 'px',\n      width: this.width * ubw + 'px',\n      height: this.height * ubh + 'px',\n      background: this.background\n    };\n  }\n  Block.prototype.update = function() {\n    this.style = {\n      top: ubh * this.y + 'px',\n      left: ubw * this.x + 'px',\n      width: this.width * ubw + 'px',\n      height: this.height * ubh + 'px',\n      background: this.background\n    };\n  };\n  // 鼠标移动事件\n  function move(event){\n    if(target) {\n      var e = event ? event: window.event;\n      if(past.type) { // 区分移动与缩放 true: move, false: resize\n        target.style.left = ubw * target.ox + e.clientX - past.x + 'px';\n        target.style.top = ubh * target.oy + e.clientY - past.y + 'px';\n        target.x = target.ox + Math.round((e.clientX - past.x) / ubw);\n        target.y = target.oy + Math.round((e.clientY - past.y) / ubh);\n        if(target.x < 0) target.x = 0;\n        if(target.y < 0) target.y = 0;\n        if(target.x + target.width > 12) target.x = 12 - target.width;\n      }else {\n        target.style.width = ubw * past.w + e.clientX - past.x + 'px';\n        target.style.height = ubh * past.h + e.clientY - past.y + 'px';\n        if((ubw * past.w + e.clientX - past.x) < ubw * target.minWidth) target.style.width = ubw * target.minWidth + 'px';\n        if((ubh * past.h + e.clientY - past.y) < ubh * target.minHeight) target.style.height = ubh * target.minHeight + 'px';\n        target.w = past.w + Math.round((e.clientX - past.x) / ubw);\n        target.h = past.h + Math.round((e.clientY - past.y) / ubh);\n        if(target.x + target.w > 12) target.w = 12 - target.x;\n        if(target.w < target.minWidth) target.w = target.minWidth;\n        if(target.h < target.minHeight) target.h = target.minHeight;\n      }\n      matrix.update(target);\n      inspectVictim();\n    }\n  }\n  // 检查善后情况（防止dealVictim执行次数过多）\n  var victimFlag = false;\n  function inspectVictim() {\n    if(victimFlag) {\n      setTimeout(inspectVictim, 40);\n    }else dealVictim();\n  }\n  // 善后工作 （移动过的元素尝试向其原坐标移动）\n  function dealVictim() {\n    var flag = false;\n    victim.forEach(i => {\n      if(i) {\n        matrix.delete(i.id);\n        if(matrix.resetBox(i, false)) {\n          if(i.ox === i.x && i.oy === i.y) {\n            victim[i.id] = null;\n          }\n          flag = true;\n        }else {\n          matrix.add(i);\n        }\n        i.update();\n      }\n    });\n    if(flag) {\n      setTimeout(dealVictim, 40);\n      victimFlag = true;\n    }else {\n      victimFlag = false;\n    }\n  }\n  // 单次操作结束事件\n  function over() {\n    if(target) {\n      target.ox = target.x;\n      target.oy = target.y;\n      victim.forEach(i => {\n        if(i) {\n          i.ox = i.x;\n          i.oy = i.y;\n        }\n      });\n      victim = [];\n      target.update();\n      target = null;\n      matrix.deleteBlankLine();\n      App.lines = matrix.arr.length;\n      App.murdererID = 0;\n    }\n    window.removeEventListener('mousemove', move);\n    window.removeEventListener('mouseup', over);\n  }\n\n  App = new Vue({\n    el: '#main',\n    data: {\n      blocks: [],\n      // 正在被操作中的Block对象的ID\n      murdererID: 0,\n      lines: 0\n    },\n    methods: {\n      move(i) {\n        over();\n        // 忽略鼠标右键的事件\n        if(event.button === 2) return;\n        this.murdererID = i.id;\n        target = i;\n        past = {x: event.clientX, y: event.clientY, type: true};\n        window.addEventListener('mousemove', move);\n        window.addEventListener('mouseup', over);\n      },\n      getItem(id) {\n        for(var i = 0; i < this.blocks.length; i++) {\n          if(this.blocks[i].id === id) return this.blocks[i];\n        }\n      }\n    },\n    mounted() {\n      this.$nextTick(() => {\n        ubw = Math.floor(this.$el.clientWidth / 12);\n        this.blocks.push(new Block());\n        this.blocks.push(new Block());\n        this.blocks.push(new Block());\n        this.blocks.push(new Block());\n        this.blocks.push(new Block());\n        this.blocks.push(new Block());\n        this.blocks.push(new Block());\n        this.blocks.push(new Block());\n        this.blocks.push(new Block());\n        this.blocks.push(new Block());\n        this.blocks.push(new Block());\n        console.log(matrix);\n        console.log(this.blocks);\n      });\n    }\n  });\n})(window);\n\n"]}