{"version":3,"sources":["2018-07-05/script/canvas.js"],"names":["scope","RAF","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","ratio","video","el","resize","cw","ctx","canvas","tctx","trailCanvas","get2DContext","createElement","document","getElementById","nodeType","nodeName","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","backingStorePixelRatio","console","scale","clientWidth","height","clientHeight","getContext","error","width","ch","register","drawImage","duration","ended","paused","Math","min","w","h","loop","playVideo","videoHeight","addEventListener","v"],"mappings":"cAKA,SAAUA,GAIR,IAAIC,EACKC,OAAOC,uBAAyBD,OAAOE,6BAA+BF,OAAOG,0BAA4BH,OAAOI,wBAA0BJ,OAAOK,yBAA2B,SAASC,GAD1LP,OAAOQ,WAAWD,EAAA,IAAA,KAAtBE,EAAA,EA+CEV,EAAIW,WAAJ,SAAAC,GACA,IAEAD,EAASE,EAAAA,EACPC,EAAKC,EALHA,EArCN,SAAsBC,GADtB,IAAAD,EAAAE,EACAC,EAASC,SAATC,cAA8B,UAK5B,GAHkBC,iBAAdH,IAAuBE,EAAcC,SAAzCC,eAAAN,IAGGA,GAA8B,IAApBA,EAAOO,UAAsC,WAApBP,EAAOQ,SAAuB,CADpET,EAAGC,EAAOA,WAAY,MAKpB,IAAMS,EAAmBvB,OAAOuB,kBAAoB,EADpDC,EAAAX,EAAAY,8BACyBzB,EAAOuB,2BACNV,EAAIY,0BAKtBF,EAAmBC,yBADDX,EAAIa,wBAA0B,EAexDC,OAZAnB,EAAAe,EAAAC,EAGAX,EAAIe,MAAJd,EAAAe,YAAArB,EACAM,EAAAgB,OAAAhB,EAAAiB,aAAAvB,EACAQ,EAAAA,MAAAA,EAAAR,GAEAO,EAAOC,MAAYgB,EAAAA,MACnBjB,EAAWP,OAAOA,EAAlBsB,QADAf,EAAOC,EAAYgB,WAAW,OAG9BJ,MAAQf,EAADL,GAEPmB,CAAQM,IAAAA,EAARlB,KAAAA,GAGH,OADEY,QAAAM,MAAA,uBACF,EAOChB,CAAAP,GAFeG,IAObA,SAAIC,IACJD,EAAIC,EAAAA,OAAOgB,YACXjB,EAAIe,EAAJd,OAAAiB,aACDlB,EAAAC,OAAAoB,MAAAtB,EAAAJ,EAFCK,EAAIC,OAAOgB,OAASK,EAAK3B,EAI3BK,EAAAe,MAASQ,EAAT5B,GAyBG,OAPHG,IAPIE,SAAIwB,IACL,GAAA5B,GAAAA,EAAA6B,WAAA7B,EAAA8B,QAAA9B,EAAA+B,OAAA,CACDzC,IAAI6B,EAAAa,KAAMC,IAAA9B,EAAA+B,EAAAR,EAAAS,GACRC,EAAAA,UAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAEH9C,EAAA,WAFG8C,MAQJA,GACEC,OAAAA,iBADK,SACKrC,GAAO,GAEhB,CAHHqC,UAGG,SAHHrC,GAnBImC,IAAMG,GAAAA,EAjBZtC,GAeIuC,iBAAA,OAAA,WAIAvC,EAAAA,EAAQwC,WACTL,EAAAK,EAAAF,cAEDtC,EAASoC,KAtEb,CA0FG7C","file":"canvas.js","sourcesContent":["/**\n * Canvas\n * @author shiro https://github.com/barusu\n */\n\n(function(scope) {\n  /**\n   * Base\n   */\n  var RAF = (function() {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {\n      window.setTimeout(callback, 1000 / 60);\n    };\n  })();\n\n  var ratio = 1;\n\n  // 获取 Canvas 2D 上下文\n  function get2DContext(canvas) {\n    var ctx, tctx;\n    var trailCanvas = document.createElement(\"canvas\");\n\n    if(typeof(canvas) === 'string') canvas = document.getElementById(canvas);\n    if(canvas && canvas.nodeType === 1 && canvas.nodeName === 'CANVAS') {\n      ctx = canvas.getContext('2d');\n\n      // 获取设备分辨率信息\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      const backingStoreRatio = ctx.webkitBackingStorePixelRatio ||\n                                ctx.mozBackingStorePixelRatio ||\n                                ctx.msBackingStorePixelRatio ||\n                                ctx.oBackingStorePixelRatio ||\n                                ctx.backingStorePixelRatio || 1;\n      ratio = devicePixelRatio / backingStoreRatio;\n\n      // 按比例缩放Canvas\n      canvas.width = canvas.clientWidth * ratio;\n      canvas.height = canvas.clientHeight * ratio;\n      ctx.scale(ratio, ratio);\n      // 轨迹层\n      trailCanvas.width = canvas.width;\n      trailCanvas.height = canvas.height;\n      tctx = trailCanvas.getContext('2d');\n      tctx.scale(ratio, ratio);\n\n      return {ctx, tctx};\n    }else {\n      console.error('El is not a Canvas');\n      return false;\n    }\n  }\n\n\n  scope.initCanvas = function(el) {\n    var ctxs = get2DContext(el);\n    var ctx = ctxs.ctx;\n    var video, w, h;\n    var cw, ch;\n\n    function resize() {\n      cw = ctx.canvas.clientWidth;\n      ch = ctx.canvas.clientHeight;\n      ctx.canvas.width = cw * ratio;\n      ctx.canvas.height = ch * ratio;\n      ctx.scale(ratio, ratio);\n    }\n\n    function register(v) {\n      v.addEventListener('play', function() {\n        w = v.videoWidth;\n        h = v.videoHeight;\n      });\n      video = v;\n    }\n\n    function loop() {\n      if(video && video.duration && !video.ended && !video.paused) {\n        var scale = Math.min(cw / w, ch / h);\n        ctx.drawImage(video, (cw - w * scale) / 2, (ch - h * scale) / 2, w * scale, h * scale);\n      }\n      RAF(() => {\n        loop();\n      });\n    }\n\n    resize();\n    loop();\n    window.addEventListener('resize', resize, false);\n\n    return {\n      playVideo(video) {\n        register(video);\n      }\n    };\n  };\n})(window);\n\n"]}