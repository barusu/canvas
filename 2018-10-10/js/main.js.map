{"version":3,"sources":["2018-09-27/script/main.js"],"names":["scope","width","height","renderer","camera","scene","light","el","RAF","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","devicePixelRatio","render","clear","line","nodeType","init","THREE","Scene","position","set","add","clientHeight","clientWidth","antialias","appendChild","domElement","setSize","PerspectiveCamera","initCamera","x","up","geometry","Geometry","material","LineBasicMaterial","vertexColors","Linewidth","color2","Color","p2","Vector3","vertices","push","p1","colors","LineSegments"],"mappings":"cAIA,SAAUA,GAIR,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAyBEC,EAzBEC,EACKC,OAAOC,uBAAyBD,OAAOE,6BAA+BF,OAAOG,0BAA4BH,OAAOI,wBAA0BJ,OAAOK,yBAA2B,SAASC,GAD1LP,OAAOQ,WAAWD,EAAA,IAAA,KACpBN,OAAAQ,iBAec,SAAdC,IAKDf,EAAAgB,QACDhB,EAASe,OAASb,EAAAD,GAChBD,EAAAA,GAGD,KADCI,EAwCAF,SAAUe,eAAV,iBAvCDC,WACDhB,EAASiB,IAATC,MAAkBC,OAEdnB,EAAQ,IAAIkB,MAAMC,iBAAlB,SAAA,EAAA,IAGMC,SAASC,IAAI,IAAK,IAAK,KAD7BpB,EAAAA,IAAQA,GAERD,EAAMsB,EAAIrB,YAGVJ,EAASK,EAAGqB,cADZ3B,EAAW4B,IAAAA,MAAAA,cAAX,CACA3B,WAAY0B,KAEVE,QAAY7B,EAAAC,GADqBK,EAAnCwB,YAAA5B,EAAA6B,YAGA7B,EAAS8B,cAAT,SAAA,IA/BF7B,EAAS,IAAImB,MAAMW,kBAAkB,GAAIjC,EAAQC,EAAQ,EAAG,MADrDiC,SAAAA,EAAa,EACpB/B,EAAAA,SAAamB,EAAMW,IACnB9B,EAAOqB,SAASW,EAAI,EACpBhC,EAAOqB,GAAAA,EAAAA,EACPrB,EAAOqB,GAAAA,EAAAA,EACPrB,EAAOiC,GAAGD,EAAI,EACdhC,EAAOiC,OAAO,CACdjC,EAAAA,EACAA,EAAAA,EACEgC,EADY,IA4BZD,IAMH,WAGC,IAAIG,EAAW,IAAIf,MAAMgB,SAD3BC,EAAgB,IAAAjB,MAAAkB,kBAAA,CAAAC,cAAA,EAAAC,UAAA,KACVL,EAAAA,IAAWf,MAAIA,MAAMgB,SAAzBK,EAAA,IAAArB,MAAAsB,MAAA,UAE0CD,EAAAA,IAASrB,MAAIA,SAAa,IAAA,EAAjB,KAI/CuB,EAAK,IAAIvB,MAAMwB,QAAU,IAAK,GAAI,KAFtCT,EAAAU,SAAAC,KAAAC,GACAZ,EAASU,SAAIzB,KAAMwB,GACnBT,EAASa,OAAI5B,KAAMwB,EAAVH,GAETN,IAAAA,EAASU,IAAAA,MAASC,KAAlBX,EAAAE,EAAAjB,MAAA6B,cACAd,EAAAA,IAASa,GAhBPjC,IAlDN,CAsEGT","file":"main.js","sourcesContent":["/**\n * Day 9\n * 2018-09-27\n */\n(function(scope) {\n  /**\n   * Base\n   */\n  var RAF = (function() {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {\n      window.setTimeout(callback, 1000 / 60);\n    };\n  })();\n  var ratio = window.devicePixelRatio || 1;\n  var width, height, renderer, camera, scene, light;\n\n  function initCamera() {\n    camera = new THREE.PerspectiveCamera(45, width / height, 1, 10000);\n    camera.position.x = 0;\n    camera.position.y = 1000;\n    camera.position.z = 0;\n    camera.up.x = 0;\n    camera.up.y = 0;\n    camera.up.z = 1;\n    camera.lookAt({\n      x : 0,\n      y : 0,\n      z : 0\n    });\n  }\n  function render() {\n    renderer.clear();\n    renderer.render(scene, camera);\n    RAF(render);\n  }\n  function init(el) {\n    if(el.nodeType === 1) {\n      scene = new THREE.Scene();\n\n      light = new THREE.DirectionalLight(0xFF0000, 1.0, 0);\n      light.position.set(100, 100, 200);\n      scene.add(light);\n\n      width = el.clientWidth;\n      height = el.clientHeight;\n      renderer = new THREE.WebGLRenderer({\n        antialias : true\n      });\n      renderer.setSize(width, height);\n      el.appendChild(renderer.domElement);\n      renderer.setClearColor(0x99FFFF, 1.0);\n\n      initCamera();\n\n      render();\n\n      draw();\n    }\n  }\n\n  function draw() {\n    var geometry = new THREE.Geometry();\n    var material = new THREE.LineBasicMaterial( { vertexColors: true, Linewidth: 10} );\n    var color1 = new THREE.Color( 0x444444 ), color2 = new THREE.Color( 0xFF0000 );\n\n    // 线的材质可以由2点的颜色决定\n    var p1 = new THREE.Vector3( -100, 0, 100 );\n    var p2 = new THREE.Vector3(  100, 0, -100 );\n    geometry.vertices.push(p1);\n    geometry.vertices.push(p2);\n    geometry.colors.push( color1, color2 );\n\n    var line = new THREE.Line( geometry, material, THREE.LineSegments );\n    scene.add(line);\n  }\n\n  init(document.getElementById('canvas-frame'));\n})(window);\n\n"]}