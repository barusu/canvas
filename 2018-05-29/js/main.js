"use strict";!function(t){var n=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){window.setTimeout(t,1e3/60)};var a=function(t,i,n){this.a={x:t.x,y:t.y},this.b={x:i.x,y:i.y},this.radian=n,this.na={x:t.x,y:t.y},this.nb={x:i.x,y:i.y}};a.prototype={paint:function(t){var i,n,a,e;t.setLineDash([8,4]),t.lineWidth=2,t.strokeStyle="#f36",i=t,n=this.a,a=this.cp,e=this.b,i.beginPath(),i.moveTo(n.x,n.y),i.quadraticCurveTo(a.x,a.y,e.x,e.y),i.stroke(),i.closePath()},update:function(){this.na.x!==this.a.x&&(this.a.x+=0<this.na.x-this.a.x?1:-1),this.na.y!==this.a.y&&(this.a.y+=0<this.na.y-this.a.y?1:-1),this.nb.x!==this.b.x&&(this.b.x+=0<this.nb.x-this.b.x?1:-1),this.nb.y!==this.b.y&&(this.b.y+=0<this.nb.y-this.b.y?1:-1)},updateLine:function(t,i,n){this.radian=n,this.na={x:t.x,y:t.y},this.nb={x:i.x,y:i.y}},get cp(){return this.a.x<this.b.x?{x:(this.a.x+this.b.x)/2+(this.b.y-this.a.y)/this.radian,y:(this.a.y+this.b.y)/2-(this.b.x-this.a.x)/this.radian}:{x:(this.a.x+this.b.x)/2-(this.b.y-this.a.y)/this.radian,y:(this.a.y+this.b.y)/2+(this.b.x-this.a.x)/this.radian}}},t.initCanvas=function(t){var i=function(t){var i;if("string"==typeof t&&(t=document.getElementById(t)),t&&1===t.nodeType&&"CANVAS"===t.nodeName){i=t.getContext("2d");var n=(window.devicePixelRatio||1)/(i.webkitBackingStorePixelRatio||i.mozBackingStorePixelRatio||i.msBackingStorePixelRatio||i.oBackingStorePixelRatio||i.backingStorePixelRatio||1);return t.width=t.clientWidth*n,t.height=t.clientHeight*n,i.scale(n,n),i}return console.error("El is not a Canvas"),!1}(t),e=[];return function t(){e.forEach(function(t){t.update()}),i.clearRect(0,0,i.canvas.width,i.canvas.height),e.forEach(function(t){t.paint(i)}),n(function(){t()})}(),{addCurve:function(t,i){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:2.6;return e.push(new a(t,i,n))-1},updateLine:function(t,i,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:2.6;e[t].updateLine(i,n,a)}}}}(window);var sp,poi,canvas=initCanvas("canvas"),state=!0;function draw(t){sp?(state?(poi=canvas.addCurve(sp,{x:t.offsetX,y:t.offsetY}),state=!1):(console.log("change"),canvas.updateLine(poi,sp,{x:t.offsetX,y:t.offsetY})),sp=null):sp={x:t.offsetX,y:t.offsetY}}
//# sourceMappingURL=main.js.map
