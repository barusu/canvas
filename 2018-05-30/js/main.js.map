{"version":3,"sources":["2018-05-30/script/main.js"],"names":["scope","RAF","requestAnimationFrame","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","Line","a","y","this","radian","na","x","nb","progress","Math","random","b","prototype","paint","lg","ctx","s","cp","e","addColorStop","min","strokeStyle","lineWidth","drawQuadraticCurve","quadraticCurveTo","stroke","closePath","update","updateLine","get2DContext","el","lines","canvas","document","getElementById","nodeType","nodeName","devicePixelRatio","webkitBackingStorePixelRatio","backingStorePixelRatio","console","scale","clientWidth","ratio","clientHeight","error","addCurve","forEach","i","width","height","loop","arguments","length","undefined","push","poi","initCanvas","sp","state","offsetX","offsetY","log"],"mappings":"cAMA,SAAUA,GACR,IAAIC,EADID,OAAOE,uBAAAC,OAAAC,6BAAAD,OAAAE,0BAAAF,OAAAG,wBAAAH,OAAAI,yBAAA,SAAAC,GACXP,OAAOQ,WAAWD,EAAA,IAAA,KA0CpB,IAAAE,EAAS,SAAAC,EAASC,EAAKA,GACvBC,KAAKC,EAAAA,CAAAA,EAALH,EAAcG,EAAAA,EAAdH,EAAAC,GACAC,KAAKE,EAAL,CAAUC,EAACA,EAAGL,EAAJC,EAASA,EAAGD,GACtBE,KAAKI,OAAMD,EACXH,KAAKK,GAAAA,CAAAA,EAALP,EAAgBQ,EAAAA,EAAKC,EAAAA,GANvBP,KAAAI,GAAA,CAAAD,EAAAK,EAAAL,EAAAJ,EAAAS,EAAAT,GAQAF,KAAKY,SAAY,IAAAH,KAAAC,UAAA,GAEbV,EAAAY,UAAA,CACAC,MADA,SACIC,GAEJA,IApBFC,EAAAC,EAAAC,EAAAC,EAoBKC,EAAAA,EAAAA,qBAA4BX,KAALP,EAAAK,GAA+B,IAAhCH,KAATQ,EAAAL,EAAyCH,KAAAF,EAAAK,IAAA,GAAzDH,KAAAF,EAAAC,GAAA,IAAAC,KAAAQ,EAAAT,EAAAC,KAAAF,EAAAC,IAAA,GAAAC,KAAAQ,EAAAL,GAAA,IAAAH,KAAAF,EAAAK,EAAAH,KAAAQ,EAAAL,IAAA,GAAAH,KAAAQ,EAAAT,GAAA,IAAAC,KAAAF,EAAAC,EAAAC,KAAAQ,EAAAT,IAAA,IACAY,EAAGK,aAAa,EAAA,wBAChBL,EAAGK,aAAaV,KAAKW,KAAKjB,KAAKK,SAAW,IAAM,IAAK,GAAI,wBACzDM,EAAGK,aAAahB,KAAGK,SAAA,IAAA,uBACnBO,EAAAA,aAAgBN,KAAAW,KAAhBjB,KAAAK,SAAA,IAAA,IAAA,GAAA,wBACAO,EAAAA,aAAgB,EAAhB,wBACAA,EAAIM,YAAJ,CAAA,EAAkBP,IADlBC,EAAIO,UAAY,EAGhBC,EAAAA,YAAAA,EA5BFR,EAeeA,EAffC,EA8BSb,KAAAF,EA9BTgB,EA8BSd,KAAAc,GA9BTC,EA8BSf,KAAAQ,EA7BTI,EAAIS,YACJT,EAAIU,OAAJT,EAAAV,EAAAU,EAAAd,GACAa,EAAIW,iBAAJT,EAAAX,EAAAW,EAAAf,EAAAgB,EAAAZ,EAAAY,EAAAhB,GACDa,EAAAU,SADCV,EAAIW,aA6BFC,OAfA,WAiBAxB,KAAGE,GAAAC,IAAAH,KAAcF,EAAAK,IAAjBH,KAA2BF,EAAAK,GAAY,EAAZH,KAAYE,GAAAC,EAAAH,KAAYF,EAAAK,EAAZ,GAA+B,GACtEH,KAAGE,GAAAH,IAAAC,KAAcF,EAAAC,IAAjBC,KAA2BF,EAAAC,GAAY,EAAZC,KAAYE,GAAAH,EAAAC,KAAYF,EAAAC,EAAZ,GAA+B,GACtEC,KAAAI,GAAAD,IAAAH,KAAAQ,EAAAL,IAAAH,KAAAQ,EAAAL,GAAA,EAAAH,KAAAI,GAAAD,EAAAH,KAAAQ,EAAAL,EAAA,GAAA,GACAH,KAAKK,GAAAA,IAAYL,KAAKK,EAAAA,IAAAA,KAALG,EAAgBT,GAAjC,EAAgBC,KAAhBI,GAAAL,EAAAC,KAAAQ,EAAAT,EAAA,GAAA,GAEF0B,KAAAA,UAxBezB,KAAAK,SAwBDG,IAAGP,KAEfwB,WAxBA,SAwBA3B,EAAWK,EAAGL,GACdE,KAAKI,OAAMD,EA3BEH,KAAAE,GAAA,CAAAC,EAAAL,EAAAK,EAAAJ,EAAAD,EAAAC,GA2BbC,KAAKI,GAAK,CAACD,EAAGK,EAAEL,EAAGJ,EAAGS,EAAET,IAIxBe,SACE,OAAAd,KAAAF,EAAOK,EAAAH,KAAAQ,EAAAL,EACD,CACJJ,GAAIC,KAAKF,EAAEC,EAAIC,KAAKQ,EAAET,GAAK,GAAKC,KAAKQ,EAAEL,EAAIH,KAAKF,EAAEK,GAAKH,KAAKC,OAF9DF,GAAAC,KAAAF,EAAAC,EAAAC,KAAAQ,EAAAT,GAAA,GAAAC,KAAAQ,EAAAL,EAAAH,KAAAF,EAAAK,GAAAH,KAAAC,QAMM,CACJF,GAAIC,KAAKF,EAAEC,EAAIC,KAAKQ,EAAET,GAAK,GAAKC,KAAKQ,EAAEL,EAAIH,KAAKF,EAAEK,GAAKH,KAAKC,OAF9DF,GAAAC,KAAAF,EAAAC,EAAAC,KAAAQ,EAAAT,GAAA,GAAAC,KAAAQ,EAAAL,EAAAH,KAAAF,EAAAK,GAAAH,KAAAC,UASJd,EAAIyB,WAAMc,SAAVC,GACA,IAAIC,EA3FL,SAJDC,GAKA,IAAAjB,EAKE,GAHA,iBAAAiB,IAAAA,EAAAC,SAAAC,eAAAF,IAGGA,GAA8B,IAApBA,EAAOG,UAAsC,WAApBH,EAAOI,SAAuB,CADpErB,EAAGiB,EAAOA,WAAY,MAEpBjB,IAUAiB,GAVwBvC,OAAxB4C,kBAAA,IACAtB,EAAAuB,8BACyB7C,EAAO4C,2BACNtB,EAAIuB,0BAKhBD,EAAAA,yBACdtB,EAAAwB,wBAAA,GAMAC,OAHAzB,EAAI0B,MAAJT,EAAAU,YAAAC,EACAX,EAAOjB,OAAPiB,EAAAY,aAAAD,EAdF5B,EAAA0B,MAeME,EAAAA,GACJH,EAGH,OADEA,QAAAK,MAAA,uBACF,EAkEKd,CAAJD,GAAIC,EAAQ,GAkBVe,OAfAf,SAAMgB,IACJC,EAAErB,QAAF,SAAAqB,GADFA,EAAArB,WAIAI,EAAAA,UAAc,EAAA,EAAAhB,EAAAiB,OAAKiB,MAAAlC,EAAAiB,OAAAkB,QACjBF,EAAEnC,QAAF,SAAAmC,GADFA,EAAAnC,MAAAE,KAIEoC,EAAAA,WADFA,MAKFA,GAGEL,CAA6BA,SAA7BA,SAAe1C,EAAcO,GAAA,IAAAP,EAAA,EAAAgD,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,IAC3B,OAAQrB,EAAMwB,KAAK,IAAIvD,EAAKC,EAAGU,EAAGP,IAA1B2B,GAETH,WAHDkB,SADKU,EAAAvD,EAAAU,GAAA,IAAAP,EAAA,EAAAgD,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,IAKLxB,EAAAA,GALKA,WAAA3B,EAAAU,EAAAP,MAjHX,CAwHOX,QAEJ,IACAA,GA3HH+D,IA8FExB,OAAAyB,WAAA,UA6BChE,OA3HH,EA6HA,SAAIuC,KAASyB,GACTC,IAAIC,OAAcH,IAAtBxB,OAAAc,SAAAY,GAAA,CAAApD,EAAAY,EAAA0C,QAAA1D,EAAAgB,EAAA2C,UAMMF,OAAQ,IAHTD,QAAII,IAAA,UACL9B,OAAAJ,WAAU4B,IAAAE,GAAA,CAAApD,EAAAY,EAAA0C,QAAA1D,EAAAgB,EAAA2C,WAERF,GAAAA,MAEAnB,GAAAA,CAAAA,EAAAA,EAAQsB,QAAI5D,EAAZgB,EAAA2C","file":"main.js","sourcesContent":["/**\n * Day 4\n * 加特效的虚线\n * 2018-05-30\n */\n\n(function(scope) {\n  var RAF = (function() {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {\n      window.setTimeout(callback, 1000 / 60);\n    };\n  })();\n  // 获取 Canvas 2D 上下文\n  function get2DContext(canvas) {\n    var ctx;\n\n    if(typeof(canvas) === 'string') canvas = document.getElementById(canvas);\n    if(canvas && canvas.nodeType === 1 && canvas.nodeName === 'CANVAS') {\n      ctx = canvas.getContext('2d');\n      // 获取设备分辨率信息\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      const backingStoreRatio = ctx.webkitBackingStorePixelRatio ||\n                                ctx.mozBackingStorePixelRatio ||\n                                ctx.msBackingStorePixelRatio ||\n                                ctx.oBackingStorePixelRatio ||\n                                ctx.backingStorePixelRatio || 1;\n      const ratio = devicePixelRatio / backingStoreRatio;\n      // 按比例缩放Canvas\n      canvas.width = canvas.clientWidth * ratio;\n      canvas.height = canvas.clientHeight * ratio;\n      ctx.scale(ratio, ratio);\n      return ctx;\n    }else {\n      console.error('El is not a Canvas');\n      return false;\n    }\n  }\n  // 绘制贝塞尔曲线\n  function drawQuadraticCurve(ctx, s, cp, e) {\n    ctx.beginPath();\n    ctx.moveTo(s.x, s.y);\n    ctx.quadraticCurveTo(cp.x, cp.y, e.x, e.y);\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  // 创建线条类\n  var Line = function(a, b, radian) {\n    this.a = {x: a.x, y: a.y};\n    this.b = {x: b.x, y: b.y};\n    this.radian = radian;\n    this.na = {x: a.x, y: a.y};\n    this.nb = {x: b.x, y: b.y};\n    this.progress = Math.random() * 100 >> 0;\n  }\n  Line.prototype = {\n    paint(ctx) {\n      // 设置画笔\n      var lg = ctx.createLinearGradient(this.a.x - ((this.b.x - this.a.x) * 0.1 >> 0), this.a.y - ((this.b.y - this.a.y) * 0.1 >> 0), this.b.x - ((this.a.x - this.b.x) * 0.1 >> 0), this.b.y - ((this.a.y - this.b.y) * 0.1 >> 0));\n      lg.addColorStop(0, 'rgba(255,255,255,.5)');\n      lg.addColorStop(Math.max((this.progress - 10) / 100, 0), 'rgba(255,255,255,.5)');\n      lg.addColorStop(this.progress / 100, 'rgba(255,255,255,1)');\n      lg.addColorStop(Math.min((this.progress + 10) / 100, 1), 'rgba(255,255,255,.5)');\n      lg.addColorStop(1, 'rgba(255,255,255,.5)');\n      ctx.setLineDash([8,4]);\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = lg;\n\n      drawQuadraticCurve(ctx, this.a, this.cp, this.b);\n    },\n    update() {\n      // 如坐标变化则进行逐帧归位\n      if(this.na.x !== this.a.x) this.a.x += this.na.x - this.a.x > 0 ? 1 : -1;\n      if(this.na.y !== this.a.y) this.a.y += this.na.y - this.a.y > 0 ? 1 : -1;\n      if(this.nb.x !== this.b.x) this.b.x += this.nb.x - this.b.x > 0 ? 1 : -1;\n      if(this.nb.y !== this.b.y) this.b.y += this.nb.y - this.b.y > 0 ? 1 : -1;\n      // 进度更新\n      this.progress = (this.progress + 0.6) % 100;\n    },\n    updateLine(a, b, radian) {\n      this.radian = radian;\n      this.na = {x: a.x, y: a.y};\n      this.nb = {x: b.x, y: b.y};\n    },\n    // 计算贝塞尔曲线控制点坐标\n    get cp() {\n      if(this.a.x < this.b.x) {\n        return {\n          x: (this.a.x + this.b.x) / 2 + (this.b.y - this.a.y) / this.radian,\n          y: (this.a.y + this.b.y) / 2 - (this.b.x - this.a.x) / this.radian\n        };\n      }else {\n        return {\n          x: (this.a.x + this.b.x) / 2 - (this.b.y - this.a.y) / this.radian,\n          y: (this.a.y + this.b.y) / 2 + (this.b.x - this.a.x) / this.radian\n        };\n      }\n    }\n  };\n\n  scope.initCanvas = function(el) {\n    var ctx = get2DContext(el);\n    var lines = [];\n\n    function loop() {\n      lines.forEach(i => {\n        i.update();\n      });\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      lines.forEach(i => {\n        i.paint(ctx);\n      });\n      RAF(() => {\n        loop();\n      });\n    }\n\n    loop();\n\n    return {\n      addCurve(a, b, radian = 2.6) {\n        var l = lines.push(new Line(a, b, radian));\n        return l - 1;\n      },\n      updateLine(poi, a, b, radian = 2.6) {\n        lines[poi].updateLine(a, b, radian);\n      }\n    };\n  };\n})(window);\n\nvar canvas = initCanvas('canvas');\nvar sp, state = true, poi;\n\nfunction draw(e) {\n  if(sp) {\n    if(state) {\n      poi = canvas.addCurve(sp, {x: e.offsetX, y: e.offsetY});\n      state = false;\n    }else {\n      console.log('change');\n      canvas.updateLine(poi, sp, {x: e.offsetX, y: e.offsetY})\n    }\n    sp = null;\n  }else {\n    sp = {x: e.offsetX, y: e.offsetY};\n  }\n}\n\n\n\n\n"]}