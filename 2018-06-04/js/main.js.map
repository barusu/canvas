{"version":3,"sources":["2018-06-04/script/main.js"],"names":["scope","RAF","requestAnimationFrame","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","Trail","paths","speed","arguments","length","undefined","this","shadowColor","shadowBlur","step","radius","old","prototype","paint","ctx","x","Points","y","save","grd","createRadialGradient","addColorStop","fillStyle","beginPath","arc","Math","PI","fill","closePath","restore","start","end","distance","vx","vy","progress","i","p1","p2","points","floor","sqrt","push","canvas","document","getElementById","nodeType","nodeName","devicePixelRatio","webkitBackingStorePixelRatio","backingStorePixelRatio","console","scale","clientWidth","ratio","clientHeight","error","trails","prev","globalCompositeOperation","initCanvas","width","height","forEach","loop"],"mappings":"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","file":"main.js","sourcesContent":["/**\n * Day 5\n * 轨迹线\n * 2018-06-04\n * 天青车道大活动期间要刷活动 这边只能咸一下了\n */\n\n(function(scope) {\n  var RAF = (function() {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {\n      window.setTimeout(callback, 1000 / 60);\n    };\n  })();\n  // 获取 Canvas 2D 上下文\n  function get2DContext(canvas) {\n    var ctx;\n\n    if(typeof(canvas) === 'string') canvas = document.getElementById(canvas);\n    if(canvas && canvas.nodeType === 1 && canvas.nodeName === 'CANVAS') {\n      ctx = canvas.getContext('2d');\n      // 获取设备分辨率信息\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      const backingStoreRatio = ctx.webkitBackingStorePixelRatio ||\n                                ctx.mozBackingStorePixelRatio ||\n                                ctx.msBackingStorePixelRatio ||\n                                ctx.oBackingStorePixelRatio ||\n                                ctx.backingStorePixelRatio || 1;\n      const ratio = devicePixelRatio / backingStoreRatio;\n      // 按比例缩放Canvas\n      canvas.width = canvas.clientWidth * ratio;\n      canvas.height = canvas.clientHeight * ratio;\n      ctx.scale(ratio, ratio);\n      return ctx;\n    }else {\n      console.error('El is not a Canvas');\n      return false;\n    }\n  }\n  // 计算两点之间的直线距离\n  function getDistance(p1, p2) {\n    return Math.sqrt((p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]));\n  }\n\n  // 创建轨迹类\n  var Trail = function(paths, speed = 1) {\n    this.paths = paths;\n    this.speed = speed;\n    this.shadowColor = '#fff';\n    this.shadowBlur = 10;\n    this.step = 0;\n    this.radius = 2;\n    this.old = [];\n  }\n  Trail.prototype = {\n    paint(ctx) {\n      var x = this.Points[this.step][0];\n      var y = this.Points[this.step][1];\n      if(this.old[0] != x || this.old[1] != y) {\n        this.old = [x, y];\n        ctx.save();\n        var grd = ctx.createRadialGradient(x, y, 1, x, y, this.radius);\n        grd.addColorStop(0, \"rgba(255,255,255,.4)\");\n        grd.addColorStop(1, \"rgba(255,255,255,0)\");\n        ctx.fillStyle = grd;\n        ctx.shadowColor = this.shadowColor;\n        ctx.shadowBlur = this.shadowBlur;\n        ctx.beginPath();\n        ctx.arc(x, y, this.radius * 2, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.closePath();\n        ctx.restore();\n      }\n      this.step ++;\n      if(this.step >= this.Points.length) this.step = 0;\n    },\n    get Points() {\n      var points = [], start, end, distance, vx, vy, progress, i;\n      for(i = 0; i < this.paths.length - 1; i++) {\n        start = this.paths[i];\n        end = this.paths[i + 1];\n        distance = Math.floor(getDistance(start, end));\n        vx = (end[0] - start[0]) / distance;\n        vy = (end[1] - start[1]) / distance;\n        progress = 0;\n        while(progress < distance) {\n          progress += this.speed;\n          points.push([start[0] + vx * progress, start[1] + vy * progress]);\n        }\n      }\n      return points;\n    }\n  };\n\n  scope.initCanvas = function(el) {\n    var ctx = get2DContext(el);\n    var trails = [];\n\n    function loop() {\n      ctx.fillStyle = 'rgba(0,0,0,.95)';\n      var prev = ctx.globalCompositeOperation;\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.globalCompositeOperation = prev;\n\n      trails.forEach(i => {\n        i.paint(ctx);\n      });\n      RAF(() => {\n        loop();\n      });\n    }\n\n    loop();\n\n    return {\n      addTrail(paths) {\n        trails.push(new Trail(paths));\n      }\n    };\n  };\n})(window);\n\nvar canvas = initCanvas('canvas');\n\ncanvas.addTrail([[50, 100], [350, 350], [550, 50]]);\n\n\n\n\n\n"]}